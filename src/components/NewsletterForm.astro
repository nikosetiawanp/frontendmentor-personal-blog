---
import SuccessIcon from "../assets/images/icon-success.svg";
import ErrorIcon from "../assets/images/icon-error.svg";
---

<form action="/submit" method="POST">
  <fieldset class="flex flex-col items-start gap-4">
    <label for="email" class="text-preset-7 -mb-4">Email Address</label>
    <input
      type="text"
      id="email"
      name="email"
      class="border border-neutral-300 dark:border-neutral-600 bg-neutral-200 dark:bg-neutral-800 rounded-[10px] px-4 py-3 text-preset-7 w-full hover:cursor-pointer hover:bg-neutral-100 dark:hover:bg-neutral-700 focus:border-b-blue-500 active:border-blue-500"
      placeholder="email@example.com"
      required
    />
    <span
      id="error-message"
      class="hidden text-red-600 dark:text-red-400 gap-2 -mt-2 items-center"
    >
      <ErrorIcon class="fill-red-600 dark:fill-red-400" />
      Please enter a valid email address.
    </span>
    <span
      id="success-message"
      class="hidden text-green-700 dark:text-green-500 gap-2 -mt-2 items-center"
    >
      <SuccessIcon class="fill-green-700 dark:fill-green-500" />
      Youâ€™re subscribed! Check your inbox for updates.
    </span>

    <button
      class="bg-blue-500 rounded-[10px] px-6 py-3 text-preset-6 text-neutral-900 hover:cursor-pointer hover:bg-blue-700"
      type="submit">Stay updated</button
    >
    <span>Unsubscribe anytime. No spam, I promise ðŸ™‚</span>
  </fieldset>
</form>

<script>
  const form = document.querySelector("form");
  form?.addEventListener("submit", async (event) => {
    event.preventDefault();
    const email = document.getElementById("email") as HTMLInputElement | null;
    const errorMessage = document.getElementById("error-message");
    const successMessage = document.getElementById("success-message");
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    const resetBorders = () => {
      email?.classList.remove(
        "border-red-600",
        "dark:border-red-400",
        "border-green-700",
        "dark:border-green-500",
        "border-neutral-300",
        "dark:border-neutral-600"
      );
    };

    const showError = () => {
      resetBorders();
      email?.classList.add("border-red-600", "dark:border-red-400");
      errorMessage?.classList.remove("hidden");
      errorMessage?.classList.add("flex");
    };

    const hideError = () => {
      errorMessage?.classList.remove("flex");
      errorMessage?.classList.add("hidden");
    };

    const showSuccess = () => {
      resetBorders();
      email?.classList.add("border-green-700", "dark:border-green-500");
      successMessage?.classList.remove("hidden");
      successMessage?.classList.add("flex");
    };

    const hideSuccess = () => {
      successMessage?.classList.remove("flex");
      successMessage?.classList.add("hidden");
    };

    if (!email || !emailRegex.test(email.value)) {
      showError();
      hideSuccess();
    } else {
      hideError();
      showSuccess();
    }
  });
</script>
